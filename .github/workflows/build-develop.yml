name: Build and Deploy Code

on: [push, pull_request] #this is for run ci/cd on push and pull action
  #push: ["branch names","main"]
  #push:
  #     branches:
  #             - "main"
  #             - "other"

jobs:
  build:
    environment:
      name: testing   
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres   #docker image
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test #creating testing db :- fastapi_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2 #this will do pull setp
      - name: Install python version 3.10.6
        uses: actions/setup-python@v2
        with:
          python-version: "3.10.6"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |                               #this help us to list of command for run
          pip install pytest
          pytest
  #this is for deploy
  deploy:
    runs-on: ubuntu-latest
    needs: [build]  #need is wait till build job comppleted
    environment:
      name: production
    steps:
      - name: pulling git repo                #use github marketplace
        uses: actions/checkout@v2
      - name: deploying to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP_NAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}

      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@master  #this is from github market system
        with:
          host: ${{secrets.PROD_HOST}}
          username: ${{secrets.PROD_USERNAME}}
          #password: ${{secrets.PROD_PASSWORD}}   
          #key: ${{ secrets.KEY }}
       #secrets we added in github setting in environment
          script: |
            cd app/src
            git pull
            echo ${{secrets.PROD_PASSWORD}} | sudo -S systemctl restart api
      # login to our ubuntu
      # cd /app/src
      # git pull
      # systemctl restart api